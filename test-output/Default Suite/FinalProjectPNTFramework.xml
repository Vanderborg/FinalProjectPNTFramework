<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="MSI" failures="1" tests="12" name="FinalProjectPNTFramework" time="7.621" errors="0" timestamp="31 May 2023 07:57:35 GMT">
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="0.244">
    <failure type="org.openqa.selenium.WebDriverException" message="disconnected: not connected to DevTools
  (failed to check if window was closed: disconnected: not connected to DevTools)
  (Session info: chrome=113.0.5672.127)
Build info: version: &amp;apos;4.1.4&amp;apos;, revision: &amp;apos;535d840ee2&amp;apos;
System info: host: &amp;apos;MSI&amp;apos;, ip: &amp;apos;192.168.92.1&amp;apos;, os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;11.0.17&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [17693129589adf1241b4edf2533f6b15, screenshot {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 113.0.5672.127, chrome: {chromedriverVersion: 113.0.5672.63 (0e1a4471d5ae..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:50832}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50832/devtoo..., se:cdpVersion: 113.0.5672.127, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 17693129589adf1241b4edf2533f6b15">
      <![CDATA[org.openqa.selenium.WebDriverException: disconnected: not connected to DevTools
  (failed to check if window was closed: disconnected: not connected to DevTools)
  (Session info: chrome=113.0.5672.127)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'MSI', ip: '192.168.92.1', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.17'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [17693129589adf1241b4edf2533f6b15, screenshot {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 113.0.5672.127, chrome: {chromedriverVersion: 113.0.5672.63 (0e1a4471d5ae..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:50832}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50832/devtoo..., se:cdpVersion: 113.0.5672.127, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 17693129589adf1241b4edf2533f6b15
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:567)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:622)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:626)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:351)
at base.CommonAPI.takeScreenshot(CommonAPI.java:415)
at base.CommonAPI.afterEachTestMethod(CommonAPI.java:106)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod endLOG" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod endLOG -->
  <testcase classname="base.CommonAPI" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod endLOG" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod endLOG -->
  <testcase classname="base.CommonAPI" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod endLOG" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod endLOG -->
  <testcase classname="base.CommonAPI" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod endLOG" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod endLOG -->
  <testcase classname="base.CommonAPI" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod endLOG" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod endLOG -->
  <testcase classname="base.CommonAPI" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod endLOG" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod endLOG -->
  <testcase classname="base.CommonAPI" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod endLOG" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod endLOG -->
  <testcase classname="base.CommonAPI" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod endLOG" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod endLOG -->
  <testcase classname="base.CommonAPI" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod endLOG" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod endLOG -->
  <testcase classname="base.CommonAPI" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod endLOG" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod endLOG -->
  <testcase classname="base.CommonAPI" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod endLOG" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod endLOG -->
  <testcase classname="base.CommonAPI" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod endLOG" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod endLOG -->
  <testcase classname="base.CommonAPI" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="nopcommercetests.RegisterLoginTest" name="registerLoginWithDataProvider" time="4.537">
    <failure type="org.openqa.selenium.WebDriverException" message="disconnected: unable to send message to renderer
  (failed to check if window was closed: disconnected: not connected to DevTools)
  (Session info: chrome=113.0.5672.127)
Build info: version: &amp;apos;4.1.4&amp;apos;, revision: &amp;apos;535d840ee2&amp;apos;
System info: host: &amp;apos;MSI&amp;apos;, ip: &amp;apos;192.168.92.1&amp;apos;, os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;11.0.17&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [17693129589adf1241b4edf2533f6b15, findElement {using=css selector, value=a[class=&amp;apos;ico-register&amp;apos;]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 113.0.5672.127, chrome: {chromedriverVersion: 113.0.5672.63 (0e1a4471d5ae..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:50832}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50832/devtoo..., se:cdpVersion: 113.0.5672.127, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 17693129589adf1241b4edf2533f6b15">
      <![CDATA[org.openqa.selenium.WebDriverException: disconnected: unable to send message to renderer
  (failed to check if window was closed: disconnected: not connected to DevTools)
  (Session info: chrome=113.0.5672.127)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'MSI', ip: '192.168.92.1', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.17'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [17693129589adf1241b4edf2533f6b15, findElement {using=css selector, value=a[class='ico-register']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 113.0.5672.127, chrome: {chromedriverVersion: 113.0.5672.63 (0e1a4471d5ae..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:50832}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50832/devtoo..., se:cdpVersion: 113.0.5672.127, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 17693129589adf1241b4edf2533f6b15
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:567)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:385)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:377)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at com.sun.proxy.$Proxy35.click(Unknown Source)
at base.CommonAPI.click(CommonAPI.java:238)
at nopcommercepages.NopCommerceHomePage.clickOnRegisterButton(NopCommerceHomePage.java:91)
at nopcommercepages.RegisterLoginPage.registerLoginWithDataProvider(RegisterLoginPage.java:361)
at nopcommercetests.RegisterLoginTest.registerLoginWithDataProvider(RegisterLoginTest.java:33)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
... Removed 26 stack frames]]>
    </failure>
  </testcase> <!-- registerLoginWithDataProvider -->
  <testcase classname="nopcommercetests.RegisterLoginTest" name="validRegister" time="0.0">
    <skipped/>
  </testcase> <!-- validRegister -->
  <testcase classname="nopcommercetests.RegisterLoginTest" name="verifyUserInfoIsDisplayed" time="0.0">
    <skipped/>
  </testcase> <!-- verifyUserInfoIsDisplayed -->
  <testcase classname="nopcommercetests.RegisterLoginTest" name="registerWithNoInput" time="0.0">
    <skipped/>
  </testcase> <!-- registerWithNoInput -->
  <testcase classname="nopcommercetests.RegisterLoginTest" name="registerWithNoEmailAndPassword" time="0.0">
    <skipped/>
  </testcase> <!-- registerWithNoEmailAndPassword -->
  <testcase classname="nopcommercetests.RegisterLoginTest" name="enterWeakPassword" time="0.0">
    <skipped/>
  </testcase> <!-- enterWeakPassword -->
  <testcase classname="nopcommercetests.RegisterLoginTest" name="registerWithWrongConfirmPassword" time="0.0">
    <skipped/>
  </testcase> <!-- registerWithWrongConfirmPassword -->
  <testcase classname="nopcommercetests.RegisterLoginTest" name="registerAndLogin" time="0.0">
    <skipped/>
  </testcase> <!-- registerAndLogin -->
  <testcase classname="nopcommercetests.RegisterLoginTest" name="forgotPasswordRecovery" time="0.0">
    <skipped/>
  </testcase> <!-- forgotPasswordRecovery -->
  <testcase classname="nopcommercetests.RegisterLoginTest" name="loginWithSQLInjectionEmail" time="0.0">
    <skipped/>
  </testcase> <!-- loginWithSQLInjectionEmail -->
  <testcase classname="nopcommercetests.RegisterLoginTest" name="loginWithSQLInjectionPassword" time="0.0">
    <skipped/>
  </testcase> <!-- loginWithSQLInjectionPassword -->
  <testcase classname="nopcommercetests.RegisterLoginTest" name="loginWithOutRegister" time="0.0">
    <skipped/>
  </testcase> <!-- loginWithOutRegister -->
</testsuite> <!-- FinalProjectPNTFramework -->
